{"ast":null,"code":"import _classCallCheck from \"/opt/lampp/htdocs/react_applications/start_react/start_react/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/opt/lampp/htdocs/react_applications/start_react/start_react/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/opt/lampp/htdocs/react_applications/start_react/start_react/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/opt/lampp/htdocs/react_applications/start_react/start_react/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/opt/lampp/htdocs/react_applications/start_react/start_react/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/opt/lampp/htdocs/react_applications/start_react/start_react/src/components/counterComponent.jsx\";\nimport React, { Component } from 'react';\n\nvar Counter =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Counter, _Component);\n\n  function Counter() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Counter);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Counter)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      count: 1\n    };\n    _this.batchStyle = {\n      fontSize: 20,\n      fontWeight: \"bold\"\n    };\n    return _this;\n  }\n\n  _createClass(Counter, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        style: this.batchStyle,\n        className: this.getBadgeClasses(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, \" \", this.formateCount()), React.createElement(\"button\", {\n        className: \"btn btn-secondary btn-sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, \"Increment\"));\n    }\n  }, {\n    key: \"getBadgeClasses\",\n    value: function getBadgeClasses() {\n      var classes = \"badge m-2 badge-\";\n      classes += this.state.count === 0 ? \"warning\" : \"primary\";\n      return classes;\n    }\n  }, {\n    key: \"formateCount\",\n    value: function formateCount() {\n      var count = this.state.count; //return count ===0?<h2>Zero</h2>: count;\n\n      return count === 0 ? \"Zero\" : count;\n    } //RE\n\n  }]);\n\n  return Counter;\n}(Component);\n\nexport default Counter;","map":{"version":3,"sources":["/opt/lampp/htdocs/react_applications/start_react/start_react/src/components/counterComponent.jsx"],"names":["React","Component","Counter","state","count","batchStyle","fontSize","fontWeight","getBadgeClasses","formateCount","classes"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;IAEMC,O;;;;;;;;;;;;;;;;;UA0EFC,K,GAAQ;AACJC,MAAAA,KAAK,EAAE;AADH,K;UAKPC,U,GAAW;AAACC,MAAAA,QAAQ,EAAC,EAAV;AAAcC,MAAAA,UAAU,EAAC;AAAzB,K;;;;;;6BAEZ;AAEI,aAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAM,QAAA,KAAK,EAAE,KAAKF,UAAlB;AAA8B,QAAA,SAAS,EAAE,KAAKG,eAAL,EAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAmE,KAAKC,YAAL,EAAnE,CADJ,EAEI;AAAQ,QAAA,SAAS,EAAC,0BAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAFJ,CAAR;AAMH;;;sCAEiB;AACd,UAAIC,OAAO,GAAG,kBAAd;AACAA,MAAAA,OAAO,IAAI,KAAKP,KAAL,CAAWC,KAAX,KAAqB,CAArB,GAAyB,SAAzB,GAAqC,SAAhD;AACA,aAAOM,OAAP;AACH;;;mCAEa;AAAA,UACHN,KADG,GACM,KAAKD,KADX,CACHC,KADG,EAEV;;AACA,aAAOA,KAAK,KAAI,CAAT,GAAY,MAAZ,GAAoBA,KAA3B;AACH,K,CAGD;;;;;EAxGkBH,S;;AA4GtB,eAAeC,OAAf","sourcesContent":["import React, { Component } from 'react';\n\nclass Counter extends Component {\n    //SETTING OBJECT\n    // state = { \n    //     count: 0 \n    //  };\n    // render() { \n    //     return (<div>\n    //                 <span> {this.formateCount()}</span>\n    //                 <button>Increment</button>\n    //             </div>);\n                \n                \n    // }\n\n    // formateCount(){\n    //     const {count} = this.state;\n    //     return count ===0?<h2>Zero</h2>: count;\n    // }\n\n\n\n\n\n\n\n    //ADD SOME MORE OBJECT ELEMENTS AND USE IT\n    // state = { \n    //     count: 0,\n    //     imageUrl : \"https://picsum.photos/200\"\n\n    //  };\n    // render() { \n    //     return (<div>\n    //                 <img src={this.state.imageUrl} alt=\"\" />\n    //                 <span> {this.formateCount()}</span>\n    //                 <button>Increment</button>\n    //             </div>);\n                \n                \n    // }\n\n    // formateCount(){\n    //     const {count} = this.state;\n    //     return count ===0?<h2>Zero</h2>: count;\n    // }\n\n\n\n\n\n    //SETTING ATTRIBUTIES\n    // state = { \n    //     count: 0\n\n    //  };\n     \n    //  batchStyle={fontSize:20, fontWeight:\"bold\"};\n    // render() { \n    //     return (<div>\n    //                 <span style={this.batchStyle} className=\"badge badge-primary m-2\"> {this.formateCount()}</span>\n    //                 <button className=\"btn btn-secondary btn-sm\">Increment</button>\n    //             </div>);\n                \n                \n    // }\n\n    // formateCount(){\n    //     const {count} = this.state;\n    //     return count ===0?<h2>Zero</h2>: count;\n    // }\n\n\n\n    //RENDERING CLASSESS DYNAMICALLY\n    state = { \n        count: 1\n\n     };\n     \n     batchStyle={fontSize:20, fontWeight:\"bold\"};\n    render() \n    { \n\n        return (<div>\n                    <span style={this.batchStyle} className={this.getBadgeClasses()}> {this.formateCount()}</span>\n                    <button className=\"btn btn-secondary btn-sm\">Increment</button>\n                </div>);\n                \n                \n    }\n\n    getBadgeClasses() {\n        let classes = \"badge m-2 badge-\";\n        classes += this.state.count === 0 ? \"warning\" : \"primary\";\n        return classes;\n    }\n\n    formateCount(){\n        const {count} = this.state;\n        //return count ===0?<h2>Zero</h2>: count;\n        return count ===0? \"Zero\": count;\n    }\n\n\n    //RE\n\n}\n \nexport default Counter;"]},"metadata":{},"sourceType":"module"}