{"ast":null,"code":"import _classCallCheck from \"/opt/lampp/htdocs/react_applications/start_react/start_react/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/opt/lampp/htdocs/react_applications/start_react/start_react/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/opt/lampp/htdocs/react_applications/start_react/start_react/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/opt/lampp/htdocs/react_applications/start_react/start_react/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/opt/lampp/htdocs/react_applications/start_react/start_react/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/opt/lampp/htdocs/react_applications/start_react/start_react/src/components/counterComponent.jsx\";\nimport React, { Component } from 'react';\n\nvar Counter =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Counter, _Component);\n\n  function Counter() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Counter);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Counter)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      count: 0\n    };\n    return _this;\n  }\n\n  _createClass(Counter, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 8\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 9\n        },\n        __self: this\n      }, \" \", this.formateCount()), React.createElement(\"button\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 10\n        },\n        __self: this\n      }, \"Increment\"));\n    }\n  }, {\n    key: \"formateCount\",\n    value: function formateCount() {\n      var count = this.state.count;\n      return count === 0 ? React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, \"Zero\") : count;\n    } //\n\n  }]);\n\n  return Counter;\n}(Component);\n\nexport default Counter;","map":{"version":3,"sources":["/opt/lampp/htdocs/react_applications/start_react/start_react/src/components/counterComponent.jsx"],"names":["React","Component","Counter","state","count","formateCount"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;IAEMC,O;;;;;;;;;;;;;;;;;UACFC,K,GAAQ;AACJC,MAAAA,KAAK,EAAE;AADH,K;;;;;;6BAGC;AACL,aAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAQ,KAAKC,YAAL,EAAR,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAFJ,CAAR;AAMH;;;mCAEa;AAAA,UACHD,KADG,GACM,KAAKD,KADX,CACHC,KADG;AAEV,aAAOA,KAAK,KAAI,CAAT,GAAW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAX,GAA0BA,KAAjC;AACH,K,CAED;;;;;EAlBkBH,S;;AAsBtB,eAAeC,OAAf","sourcesContent":["import React, { Component } from 'react';\n\nclass Counter extends Component {\n    state = { \n        count: 0 \n     };\n    render() { \n        return (<div>\n                    <span> {this.formateCount()}</span>\n                    <button>Increment</button>\n                </div>);\n                \n                \n    }\n\n    formateCount(){\n        const {count} = this.state;\n        return count ===0?<h2>Zero</h2>: count;\n    }\n\n    //\n\n}\n \nexport default Counter;"]},"metadata":{},"sourceType":"module"}