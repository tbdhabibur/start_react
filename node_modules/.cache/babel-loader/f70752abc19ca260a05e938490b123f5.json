{"ast":null,"code":"import _classCallCheck from \"/opt/lampp/htdocs/react_applications/start_react/start_react/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"/opt/lampp/htdocs/react_applications/start_react/start_react/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/opt/lampp/htdocs/react_applications/start_react/start_react/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/opt/lampp/htdocs/react_applications/start_react/start_react/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport React, { Component } from 'react';\n\nvar Counter =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Counter, _Component);\n\n  function Counter() {\n    _classCallCheck(this, Counter);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Counter).apply(this, arguments));\n  }\n\n  return Counter;\n}(Component);\n\nexport default Counter;","map":{"version":3,"sources":["/opt/lampp/htdocs/react_applications/start_react/start_react/src/components/counterComponent.jsx"],"names":["React","Component","Counter"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;IAEMC,O;;;;;;;;;;;;EAAgBD,S;;AAqKtB,eAAeC,OAAf","sourcesContent":["import React, { Component } from 'react';\n\nclass Counter extends Component {\n    //SETTING OBJECT\n    // state = { \n    //     count: 0 \n    //  };\n    // render() { \n    //     return (<div>\n    //                 <span> {this.formateCount()}</span>\n    //                 <button>Increment</button>\n    //             </div>);\n                \n                \n    // }\n\n    // formateCount(){\n    //     const {count} = this.state;\n    //     return count ===0?<h2>Zero</h2>: count;\n    // }\n\n\n\n\n    //ADD SOME MORE OBJECT ELEMENTS AND USE IT\n    // state = { \n    //     count: 0,\n    //     imageUrl : \"https://picsum.photos/200\"\n\n    //  };\n    // render() { \n    //     return (<div>\n    //                 <img src={this.state.imageUrl} alt=\"\" />\n    //                 <span> {this.formateCount()}</span>\n    //                 <button>Increment</button>\n    //             </div>);\n                \n                \n    // }\n\n    // formateCount(){\n    //     const {count} = this.state;\n    //     return count ===0?<h2>Zero</h2>: count;\n    // }\n\n\n    //SETTING ATTRIBUTIES\n    // state = { \n    //     count: 0\n\n    //  };\n     \n    //  batchStyle={fontSize:20, fontWeight:\"bold\"};\n    // render() { \n    //     return (<div>\n    //                 <span style={this.batchStyle} className=\"badge badge-primary m-2\"> {this.formateCount()}</span>\n    //                 <button className=\"btn btn-secondary btn-sm\">Increment</button>\n    //             </div>);\n                \n                \n    // }\n\n    // formateCount(){\n    //     const {count} = this.state;\n    //     return count ===0?<h2>Zero</h2>: count;\n    // }\n\n\n\n    //RENDERING CLASSESS DYNAMICALLY\n    // state = { \n    //     count: 1\n\n    //  };\n     \n    //  batchStyle={fontSize:20, fontWeight:\"bold\"};\n    // render() \n    // { \n\n    //     return (<div>\n    //                 <span style={this.batchStyle} className={this.getBadgeClasses()}> {this.formateCount()}</span>\n    //                 <button className=\"btn btn-secondary btn-sm\">Increment</button>\n    //             </div>);\n                \n                \n    // }\n\n    // getBadgeClasses() {\n    //     let classes = \"badge m-2 badge-\";\n    //     classes += this.state.count === 0 ? \"warning\" : \"primary\";\n    //     return classes;\n    // }\n\n    // formateCount(){\n    //     const {count} = this.state;\n    //     //return count ===0?<h2>Zero</h2>: count;\n    //     return count ===0? \"Zero\": count;\n    // }\n\n\n    //RENDERING LISTS\n    // state = { \n    //     count: 1,\n    //     tags:['tag1','tag2','tag3']\n\n    //  };\n     \n    //  batchStyle={fontSize:20, fontWeight:\"bold\"};\n    // render() \n    // { \n\n    //     return (<div>\n    //                 <span style={this.batchStyle} className={this.getBadgeClasses()}> {this.formateCount()}</span>\n    //                 <button className=\"btn btn-secondary btn-sm\">Increment</button>\n    //                 <ul>\n    //                     {/* it works as for looping cause it doesnt have looping */}\n    //                     {this.state.tags.map(tag =><li key={tag}>{tag}</li>)}\n    //                 </ul>\n    //             </div>);\n                \n                \n    // }\n\n    // getBadgeClasses() {\n    //     let classes = \"badge m-2 badge-\";\n    //     classes += this.state.count === 0 ? \"warning\" : \"primary\";\n    //     return classes;\n    // }\n\n    // formateCount(){\n    //     const {count} = this.state;\n    //     //return count ===0?<h2>Zero</h2>: count;\n    //     return count ===0? \"Zero\": count;\n    // }\n\n\n    //CONDITIONAL RENDERING\n    // state = { \n    //     count: 1,\n    //     tags:[]\n\n    //  };\n\n    //  renderTags(){\n    //      if(this.state.tags.length ===0) return <p>There are no tags!</p>;\n    //      return <ul>{this.state.tags.map(tag => <li key=\"{tag}\">{tag}</li>)}</ul>;\n    //  }\n     \n    //  batchStyle={fontSize:20, fontWeight:\"bold\"};\n    // render() \n    // { \n\n    //     return (<div>\n    //                 {this.state.tags.length === 0 && 'please create a new tag!'}\n    //                 {this.renderTags()}\n    //             </div>);\n                \n                \n    // }\n\n\n    //HANDLING EVENTS\n    \n\n\n}\n \nexport default Counter;"]},"metadata":{},"sourceType":"module"}